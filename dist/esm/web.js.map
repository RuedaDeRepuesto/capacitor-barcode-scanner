{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"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","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type { BarcodeScannerPlugin, MultiScanOptions, MultiScanResult, ScanResult } from './definitions';\n\nimport * as _jsQR from './jsqr.js';\n\nconst jsQR = (_jsQR as any).default || _jsQR;\n\nexport class BarcodeScannerWeb extends WebPlugin implements BarcodeScannerPlugin {\n\n\n  async multiScan(opts:MultiScanOptions): Promise<MultiScanResult> {\n\n\n    const scans = await this.readInternal(opts.maxScans);\n\n    if(scans.length > 0){\n      return {result:true,codes:scans,count:scans.length};\n    }else{\n      return {result:false,count:0,codes:[]};\n    }\n\n  }\n\n\n  async scan():Promise<ScanResult>{\n\n    const scans = await this.readInternal();\n\n    if(scans.length > 0){\n      return {result:true,code:scans[0]};\n    }else{\n      return {result:false};\n    }\n\n  }\n\n\n  private async readInternal(reads = 1){\n    const fInput = document.createElement('input');\n    fInput.type = 'file';\n    fInput.accept = '.png';\n    if(reads > 1){\n      fInput.multiple = true;\n    }\n\n    const promise = new Promise<string[]>((resolve)=>{\n      fInput.addEventListener('change', async () => {\n        if (fInput.files && fInput.files.length > 0) {\n\n          const scans:string[]= [];\n          const min = Math.min(fInput.files.length,reads);\n          for (let i = 0; i < min; i++) {\n            const img = fInput.files[i];\n            const imgData = await this.blobToImageData(img);    \n            const code = jsQR(imgData.data, imgData.width, imgData.height);\n            //console.log(code);\n            if(code && code.data){\n              scans.push(code.data);\n            }\n          }\n          resolve(scans);\n        } else {\n            return [];\n        }\n    });\n    });\n\n\n    fInput.click();\n    return promise;\n  }\n\n  private async blobToImageData(blob:Blob):Promise<ImageData> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n\n      reader.readAsDataURL(blob);\n\n      reader.onloadend = () => {\n        const image = new Image();\n\n        image.src = reader.result as string;\n\n        image.onload = () => {\n          const canvas = document.createElement('canvas');\n          canvas.width = image.width;\n          canvas.height = image.height;\n          \n          const ctx = canvas.getContext('2d')!;\n\n          ctx.drawImage(image, 0, 0);\n\n          const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n          resolve(imageData);\n        };\n\n        image.onerror = reject;\n      };\n\n      reader.onerror = reject;\n    });\n  }\n}\n"]}