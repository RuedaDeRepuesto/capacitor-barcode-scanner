{
  "api": {
    "name": "BarcodeScannerPlugin",
    "slug": "barcodescannerplugin",
    "docs": "",
    "tags": [],
    "methods": [
      {
        "name": "scan",
        "signature": "() => Promise<ScanResult>",
        "parameters": [],
        "returns": "Promise<ScanResult>",
        "tags": [],
        "docs": "Start scan screen\nThis promise will fail if permission for camera is denied",
        "complexTypes": [
          "ScanResult"
        ],
        "slug": "scan"
      },
      {
        "name": "multiScan",
        "signature": "() => Promise<MultiScanResult>",
        "parameters": [],
        "returns": "Promise<MultiScanResult>",
        "tags": [],
        "docs": "Start scan screen\nthe difference vs scan is this will not close automatically, and continues scannning multiple codes\n! Added in v1.1.1",
        "complexTypes": [
          "MultiScanResult"
        ],
        "slug": "multiscan"
      }
    ],
    "properties": []
  },
  "interfaces": [
    {
      "name": "ScanResult",
      "slug": "scanresult",
      "docs": "Represents a Scan Result",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "result",
          "tags": [],
          "docs": "sucess status, its true when scanner got code",
          "complexTypes": [],
          "type": "boolean"
        },
        {
          "name": "code",
          "tags": [],
          "docs": "scanned code",
          "complexTypes": [],
          "type": "string | undefined"
        }
      ]
    },
    {
      "name": "MultiScanResult",
      "slug": "multiscanresult",
      "docs": "Represents a Multiple scan result",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "result",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "boolean"
        },
        {
          "name": "count",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "number"
        },
        {
          "name": "codes",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string[]"
        }
      ]
    }
  ],
  "enums": [],
  "typeAliases": [],
  "pluginConfigs": []
}